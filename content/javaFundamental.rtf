{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green121\blue165;\red0\green145\blue206;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
{\info
{\author Sahil Babbar}
{\*\copyright Sahil Babbar}}\paperw11900\paperh16840\margl1440\margr1440\vieww22000\viewh13000\viewkind1
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural
\ls1\ilvl0
\f0\fs20 \cf0 {\listtext	\'95	}public class void main(\cf2 String[] args\cf0 ) \{ \}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 		Here, args is used to take command line arguments from the user. 		At the command line, the user enters the name of the class 		followed by the command line input. When is the application is 		executed, the 	command line arguments are passed to the program\'92s 		main method via an array of strings. So, these arguments can 		be accessed by using args[0], args[1],\'85 depending on the 		number of inputs.\
		Eg:\
		> java ClassName commandLineInput\
	\
		System.out.println(args[0]) outputs 
\f1\i commandLineInput\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural
\ls2\ilvl0
\f0\i0 \cf0 {\listtext	\'95	}\cf3 Parsing\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf3 		\cf0 \expnd0\expndtw0\kerning0
Parsing can be considered as a synonym of "Breaking down 		into small pieces" and then analysing what is there or using it 		in a modified way. In Java, Strings are parsed into Decimal, 		Octal, Binary, Hexadecimal, etc. It is done if your application 		is taking input from the user in the form of string but somewhere 		in your application you want to use that input in the form of an 		integer or of double type. It is not same as type casting. For 		type casting the types used should be compatible in order to 		caste but nothing such in parsing.\kerning1\expnd0\expndtw0   }